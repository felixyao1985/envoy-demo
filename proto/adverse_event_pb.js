/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.exportSymbol('proto.datacenter.AdverseEventModel', null, global);
goog.exportSymbol('proto.datacenter.AdverseEventSearchModel', null, global);
goog.exportSymbol('proto.datacenter.RepAdverseEventView', null, global);
goog.exportSymbol('proto.datacenter.RepSearch', null, global);
goog.exportSymbol('proto.datacenter.ResAdverseEvent', null, global);
goog.exportSymbol('proto.datacenter.ResSearch', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datacenter.RepSearch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datacenter.RepSearch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.datacenter.RepSearch.displayName = 'proto.datacenter.RepSearch';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datacenter.RepSearch.prototype.toObject = function(opt_includeInstance) {
  return proto.datacenter.RepSearch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datacenter.RepSearch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datacenter.RepSearch.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyword: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datacenter.RepSearch}
 */
proto.datacenter.RepSearch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datacenter.RepSearch;
  return proto.datacenter.RepSearch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datacenter.RepSearch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datacenter.RepSearch}
 */
proto.datacenter.RepSearch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKeyword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datacenter.RepSearch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datacenter.RepSearch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datacenter.RepSearch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datacenter.RepSearch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyword();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string keyword = 1;
 * @return {string}
 */
proto.datacenter.RepSearch.prototype.getKeyword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.datacenter.RepSearch.prototype.setKeyword = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datacenter.ResSearch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datacenter.ResSearch.repeatedFields_, null);
};
goog.inherits(proto.datacenter.ResSearch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.datacenter.ResSearch.displayName = 'proto.datacenter.ResSearch';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datacenter.ResSearch.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datacenter.ResSearch.prototype.toObject = function(opt_includeInstance) {
  return proto.datacenter.ResSearch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datacenter.ResSearch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datacenter.ResSearch.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataInfoList: jspb.Message.toObjectList(msg.getDataInfoList(),
    proto.datacenter.AdverseEventSearchModel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datacenter.ResSearch}
 */
proto.datacenter.ResSearch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datacenter.ResSearch;
  return proto.datacenter.ResSearch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datacenter.ResSearch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datacenter.ResSearch}
 */
proto.datacenter.ResSearch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = new proto.datacenter.AdverseEventSearchModel;
      reader.readMessage(value,proto.datacenter.AdverseEventSearchModel.deserializeBinaryFromReader);
      msg.addDataInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datacenter.ResSearch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datacenter.ResSearch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datacenter.ResSearch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datacenter.ResSearch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.datacenter.AdverseEventSearchModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 code = 1;
 * @return {number}
 */
proto.datacenter.ResSearch.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.datacenter.ResSearch.prototype.setCode = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.datacenter.ResSearch.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.datacenter.ResSearch.prototype.setMsg = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated AdverseEventSearchModel data_info = 3;
 * @return {!Array.<!proto.datacenter.AdverseEventSearchModel>}
 */
proto.datacenter.ResSearch.prototype.getDataInfoList = function() {
  return /** @type{!Array.<!proto.datacenter.AdverseEventSearchModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datacenter.AdverseEventSearchModel, 3));
};


/** @param {!Array.<!proto.datacenter.AdverseEventSearchModel>} value */
proto.datacenter.ResSearch.prototype.setDataInfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.datacenter.AdverseEventSearchModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datacenter.AdverseEventSearchModel}
 */
proto.datacenter.ResSearch.prototype.addDataInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.datacenter.AdverseEventSearchModel, opt_index);
};


proto.datacenter.ResSearch.prototype.clearDataInfoList = function() {
  this.setDataInfoList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datacenter.RepAdverseEventView = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datacenter.RepAdverseEventView, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.datacenter.RepAdverseEventView.displayName = 'proto.datacenter.RepAdverseEventView';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datacenter.RepAdverseEventView.prototype.toObject = function(opt_includeInstance) {
  return proto.datacenter.RepAdverseEventView.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datacenter.RepAdverseEventView} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datacenter.RepAdverseEventView.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datacenter.RepAdverseEventView}
 */
proto.datacenter.RepAdverseEventView.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datacenter.RepAdverseEventView;
  return proto.datacenter.RepAdverseEventView.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datacenter.RepAdverseEventView} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datacenter.RepAdverseEventView}
 */
proto.datacenter.RepAdverseEventView.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datacenter.RepAdverseEventView.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datacenter.RepAdverseEventView.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datacenter.RepAdverseEventView} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datacenter.RepAdverseEventView.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 ID = 1;
 * @return {number}
 */
proto.datacenter.RepAdverseEventView.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.datacenter.RepAdverseEventView.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datacenter.AdverseEventSearchModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datacenter.AdverseEventSearchModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.datacenter.AdverseEventSearchModel.displayName = 'proto.datacenter.AdverseEventSearchModel';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datacenter.AdverseEventSearchModel.prototype.toObject = function(opt_includeInstance) {
  return proto.datacenter.AdverseEventSearchModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datacenter.AdverseEventSearchModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datacenter.AdverseEventSearchModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    integration: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datacenter.AdverseEventSearchModel}
 */
proto.datacenter.AdverseEventSearchModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datacenter.AdverseEventSearchModel;
  return proto.datacenter.AdverseEventSearchModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datacenter.AdverseEventSearchModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datacenter.AdverseEventSearchModel}
 */
proto.datacenter.AdverseEventSearchModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIntegration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datacenter.AdverseEventSearchModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datacenter.AdverseEventSearchModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datacenter.AdverseEventSearchModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datacenter.AdverseEventSearchModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getIntegration();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.datacenter.AdverseEventSearchModel.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.datacenter.AdverseEventSearchModel.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string integration = 2;
 * @return {string}
 */
proto.datacenter.AdverseEventSearchModel.prototype.getIntegration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventSearchModel.prototype.setIntegration = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datacenter.AdverseEventModel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.datacenter.AdverseEventModel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.datacenter.AdverseEventModel.displayName = 'proto.datacenter.AdverseEventModel';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datacenter.AdverseEventModel.prototype.toObject = function(opt_includeInstance) {
  return proto.datacenter.AdverseEventModel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datacenter.AdverseEventModel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datacenter.AdverseEventModel.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    domainType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    domainId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    domainName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    domainAddresss: jspb.Message.getFieldWithDefault(msg, 5, ""),
    domainCreatetime: jspb.Message.getFieldWithDefault(msg, 6, ""),
    patientSex: jspb.Message.getFieldWithDefault(msg, 7, ""),
    patientName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    patientAge: jspb.Message.getFieldWithDefault(msg, 9, ""),
    patientType: jspb.Message.getFieldWithDefault(msg, 10, ""),
    patientState: jspb.Message.getFieldWithDefault(msg, 11, ""),
    eventPlaceType: jspb.Message.getFieldWithDefault(msg, 12, ""),
    eventPlace: jspb.Message.getFieldWithDefault(msg, 13, ""),
    eventTime: jspb.Message.getFieldWithDefault(msg, 14, ""),
    eventScene: jspb.Message.getFieldWithDefault(msg, 15, ""),
    eventType: jspb.Message.getFieldWithDefault(msg, 16, ""),
    eventMemo: jspb.Message.getFieldWithDefault(msg, 17, ""),
    symptom: jspb.Message.getFieldWithDefault(msg, 18, ""),
    dispose: jspb.Message.getFieldWithDefault(msg, 19, ""),
    disposeWorkerType: jspb.Message.getFieldWithDefault(msg, 20, ""),
    disposeWorkerTitle: jspb.Message.getFieldWithDefault(msg, 21, ""),
    disposeWorkerAge: jspb.Message.getFieldWithDefault(msg, 22, ""),
    disposeWorkerName: jspb.Message.getFieldWithDefault(msg, 23, ""),
    disposeWorkerSex: jspb.Message.getFieldWithDefault(msg, 24, ""),
    eventLv: jspb.Message.getFieldWithDefault(msg, 25, ""),
    eventResult: jspb.Message.getFieldWithDefault(msg, 26, ""),
    eventReason: jspb.Message.getFieldWithDefault(msg, 27, ""),
    eventReasonMemo: jspb.Message.getFieldWithDefault(msg, 28, ""),
    followUpl: jspb.Message.getFieldWithDefault(msg, 29, ""),
    qcUserName: jspb.Message.getFieldWithDefault(msg, 30, ""),
    qcUserAge: jspb.Message.getFieldWithDefault(msg, 31, ""),
    qcUserSex: jspb.Message.getFieldWithDefault(msg, 32, ""),
    qcUserType: jspb.Message.getFieldWithDefault(msg, 33, ""),
    qcUserTitle: jspb.Message.getFieldWithDefault(msg, 34, ""),
    preventive: jspb.Message.getFieldWithDefault(msg, 35, ""),
    preventiveManager: jspb.Message.getFieldWithDefault(msg, 36, ""),
    accidentLiability: jspb.Message.getFieldWithDefault(msg, 37, ""),
    preventiveManagePost: jspb.Message.getFieldWithDefault(msg, 38, ""),
    preventiveManageAge: jspb.Message.getFieldWithDefault(msg, 39, ""),
    preventiveManageSex: jspb.Message.getFieldWithDefault(msg, 40, ""),
    preventiveManageTitle: jspb.Message.getFieldWithDefault(msg, 41, ""),
    patientStateMemo: jspb.Message.getFieldWithDefault(msg, 42, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datacenter.AdverseEventModel}
 */
proto.datacenter.AdverseEventModel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datacenter.AdverseEventModel;
  return proto.datacenter.AdverseEventModel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datacenter.AdverseEventModel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datacenter.AdverseEventModel}
 */
proto.datacenter.AdverseEventModel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomainType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDomainId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomainName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomainAddresss(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomainCreatetime(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientSex(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientAge(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientType(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientState(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventPlaceType(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventPlace(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventTime(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventScene(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventMemo(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymptom(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setDispose(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisposeWorkerType(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisposeWorkerTitle(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisposeWorkerAge(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisposeWorkerName(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisposeWorkerSex(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventLv(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventResult(value);
      break;
    case 27:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventReason(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventReasonMemo(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setFollowUpl(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setQcUserName(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setQcUserAge(value);
      break;
    case 32:
      var value = /** @type {string} */ (reader.readString());
      msg.setQcUserSex(value);
      break;
    case 33:
      var value = /** @type {string} */ (reader.readString());
      msg.setQcUserType(value);
      break;
    case 34:
      var value = /** @type {string} */ (reader.readString());
      msg.setQcUserTitle(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreventive(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreventiveManager(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccidentLiability(value);
      break;
    case 38:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreventiveManagePost(value);
      break;
    case 39:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreventiveManageAge(value);
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreventiveManageSex(value);
      break;
    case 41:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreventiveManageTitle(value);
      break;
    case 42:
      var value = /** @type {string} */ (reader.readString());
      msg.setPatientStateMemo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datacenter.AdverseEventModel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datacenter.AdverseEventModel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datacenter.AdverseEventModel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datacenter.AdverseEventModel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getDomainType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDomainId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getDomainName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDomainAddresss();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDomainCreatetime();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPatientSex();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPatientName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPatientAge();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPatientType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPatientState();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getEventPlaceType();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getEventPlace();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getEventTime();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getEventScene();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getEventMemo();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getSymptom();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getDispose();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getDisposeWorkerType();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getDisposeWorkerTitle();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getDisposeWorkerAge();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getDisposeWorkerName();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getDisposeWorkerSex();
  if (f.length > 0) {
    writer.writeString(
      24,
      f
    );
  }
  f = message.getEventLv();
  if (f.length > 0) {
    writer.writeString(
      25,
      f
    );
  }
  f = message.getEventResult();
  if (f.length > 0) {
    writer.writeString(
      26,
      f
    );
  }
  f = message.getEventReason();
  if (f.length > 0) {
    writer.writeString(
      27,
      f
    );
  }
  f = message.getEventReasonMemo();
  if (f.length > 0) {
    writer.writeString(
      28,
      f
    );
  }
  f = message.getFollowUpl();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getQcUserName();
  if (f.length > 0) {
    writer.writeString(
      30,
      f
    );
  }
  f = message.getQcUserAge();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getQcUserSex();
  if (f.length > 0) {
    writer.writeString(
      32,
      f
    );
  }
  f = message.getQcUserType();
  if (f.length > 0) {
    writer.writeString(
      33,
      f
    );
  }
  f = message.getQcUserTitle();
  if (f.length > 0) {
    writer.writeString(
      34,
      f
    );
  }
  f = message.getPreventive();
  if (f.length > 0) {
    writer.writeString(
      35,
      f
    );
  }
  f = message.getPreventiveManager();
  if (f.length > 0) {
    writer.writeString(
      36,
      f
    );
  }
  f = message.getAccidentLiability();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
  f = message.getPreventiveManagePost();
  if (f.length > 0) {
    writer.writeString(
      38,
      f
    );
  }
  f = message.getPreventiveManageAge();
  if (f.length > 0) {
    writer.writeString(
      39,
      f
    );
  }
  f = message.getPreventiveManageSex();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getPreventiveManageTitle();
  if (f.length > 0) {
    writer.writeString(
      41,
      f
    );
  }
  f = message.getPatientStateMemo();
  if (f.length > 0) {
    writer.writeString(
      42,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.datacenter.AdverseEventModel.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.datacenter.AdverseEventModel.prototype.setId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string domain_type = 2;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getDomainType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setDomainType = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 domain_id = 3;
 * @return {number}
 */
proto.datacenter.AdverseEventModel.prototype.getDomainId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.datacenter.AdverseEventModel.prototype.setDomainId = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string domain_name = 4;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getDomainName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setDomainName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string domain_addresss = 5;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getDomainAddresss = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setDomainAddresss = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string domain_createtime = 6;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getDomainCreatetime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setDomainCreatetime = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string patient_sex = 7;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getPatientSex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setPatientSex = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string patient_name = 8;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getPatientName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setPatientName = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string patient_age = 9;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getPatientAge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setPatientAge = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string patient_type = 10;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getPatientType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setPatientType = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string patient_state = 11;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getPatientState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setPatientState = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string event_place_type = 12;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getEventPlaceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setEventPlaceType = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string event_place = 13;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getEventPlace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setEventPlace = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string event_time = 14;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getEventTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setEventTime = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string event_scene = 15;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getEventScene = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setEventScene = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string event_type = 16;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setEventType = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string event_memo = 17;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getEventMemo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setEventMemo = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string symptom = 18;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getSymptom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setSymptom = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string dispose = 19;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getDispose = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setDispose = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string dispose_worker_type = 20;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getDisposeWorkerType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setDisposeWorkerType = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string dispose_worker_title = 21;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getDisposeWorkerTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setDisposeWorkerTitle = function(value) {
  jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string dispose_worker_age = 22;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getDisposeWorkerAge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setDisposeWorkerAge = function(value) {
  jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string dispose_worker_name = 23;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getDisposeWorkerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setDisposeWorkerName = function(value) {
  jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional string dispose_worker_sex = 24;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getDisposeWorkerSex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setDisposeWorkerSex = function(value) {
  jspb.Message.setProto3StringField(this, 24, value);
};


/**
 * optional string event_lv = 25;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getEventLv = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setEventLv = function(value) {
  jspb.Message.setProto3StringField(this, 25, value);
};


/**
 * optional string event_result = 26;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getEventResult = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setEventResult = function(value) {
  jspb.Message.setProto3StringField(this, 26, value);
};


/**
 * optional string event_reason = 27;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getEventReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 27, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setEventReason = function(value) {
  jspb.Message.setProto3StringField(this, 27, value);
};


/**
 * optional string event_reason_memo = 28;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getEventReasonMemo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setEventReasonMemo = function(value) {
  jspb.Message.setProto3StringField(this, 28, value);
};


/**
 * optional string follow_upl = 29;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getFollowUpl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setFollowUpl = function(value) {
  jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional string qc_user_name = 30;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getQcUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setQcUserName = function(value) {
  jspb.Message.setProto3StringField(this, 30, value);
};


/**
 * optional string qc_user_age = 31;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getQcUserAge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setQcUserAge = function(value) {
  jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional string qc_user_sex = 32;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getQcUserSex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 32, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setQcUserSex = function(value) {
  jspb.Message.setProto3StringField(this, 32, value);
};


/**
 * optional string qc_user_type = 33;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getQcUserType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 33, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setQcUserType = function(value) {
  jspb.Message.setProto3StringField(this, 33, value);
};


/**
 * optional string qc_user_title = 34;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getQcUserTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 34, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setQcUserTitle = function(value) {
  jspb.Message.setProto3StringField(this, 34, value);
};


/**
 * optional string preventive = 35;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getPreventive = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setPreventive = function(value) {
  jspb.Message.setProto3StringField(this, 35, value);
};


/**
 * optional string preventive_manager = 36;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getPreventiveManager = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setPreventiveManager = function(value) {
  jspb.Message.setProto3StringField(this, 36, value);
};


/**
 * optional string accident_liability = 37;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getAccidentLiability = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setAccidentLiability = function(value) {
  jspb.Message.setProto3StringField(this, 37, value);
};


/**
 * optional string preventive_manage_post = 38;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getPreventiveManagePost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 38, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setPreventiveManagePost = function(value) {
  jspb.Message.setProto3StringField(this, 38, value);
};


/**
 * optional string preventive_manage_age = 39;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getPreventiveManageAge = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 39, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setPreventiveManageAge = function(value) {
  jspb.Message.setProto3StringField(this, 39, value);
};


/**
 * optional string preventive_manage_sex = 40;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getPreventiveManageSex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setPreventiveManageSex = function(value) {
  jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional string preventive_manage_title = 41;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getPreventiveManageTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 41, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setPreventiveManageTitle = function(value) {
  jspb.Message.setProto3StringField(this, 41, value);
};


/**
 * optional string patient_state_memo = 42;
 * @return {string}
 */
proto.datacenter.AdverseEventModel.prototype.getPatientStateMemo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 42, ""));
};


/** @param {string} value */
proto.datacenter.AdverseEventModel.prototype.setPatientStateMemo = function(value) {
  jspb.Message.setProto3StringField(this, 42, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.datacenter.ResAdverseEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.datacenter.ResAdverseEvent.repeatedFields_, null);
};
goog.inherits(proto.datacenter.ResAdverseEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.datacenter.ResAdverseEvent.displayName = 'proto.datacenter.ResAdverseEvent';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.datacenter.ResAdverseEvent.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.datacenter.ResAdverseEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.datacenter.ResAdverseEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.datacenter.ResAdverseEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datacenter.ResAdverseEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataInfoList: jspb.Message.toObjectList(msg.getDataInfoList(),
    proto.datacenter.AdverseEventModel.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.datacenter.ResAdverseEvent}
 */
proto.datacenter.ResAdverseEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.datacenter.ResAdverseEvent;
  return proto.datacenter.ResAdverseEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.datacenter.ResAdverseEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.datacenter.ResAdverseEvent}
 */
proto.datacenter.ResAdverseEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 3:
      var value = new proto.datacenter.AdverseEventModel;
      reader.readMessage(value,proto.datacenter.AdverseEventModel.deserializeBinaryFromReader);
      msg.addDataInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.datacenter.ResAdverseEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.datacenter.ResAdverseEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.datacenter.ResAdverseEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.datacenter.ResAdverseEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.datacenter.AdverseEventModel.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.datacenter.ResAdverseEvent.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.datacenter.ResAdverseEvent.prototype.setCode = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.datacenter.ResAdverseEvent.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.datacenter.ResAdverseEvent.prototype.setMsg = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated AdverseEventModel data_info = 3;
 * @return {!Array.<!proto.datacenter.AdverseEventModel>}
 */
proto.datacenter.ResAdverseEvent.prototype.getDataInfoList = function() {
  return /** @type{!Array.<!proto.datacenter.AdverseEventModel>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.datacenter.AdverseEventModel, 3));
};


/** @param {!Array.<!proto.datacenter.AdverseEventModel>} value */
proto.datacenter.ResAdverseEvent.prototype.setDataInfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.datacenter.AdverseEventModel=} opt_value
 * @param {number=} opt_index
 * @return {!proto.datacenter.AdverseEventModel}
 */
proto.datacenter.ResAdverseEvent.prototype.addDataInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.datacenter.AdverseEventModel, opt_index);
};


proto.datacenter.ResAdverseEvent.prototype.clearDataInfoList = function() {
  this.setDataInfoList([]);
};


goog.object.extend(exports, proto.datacenter);
